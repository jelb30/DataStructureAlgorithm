import Arrays.*;
import HashMap.CloseStrings;
import Recursion.*;
import Strings.IsSubsequence;
import Strings.Permutation;
import Strings.SubSequence;
import Strings.SubsetPalindrome;

public class Main {

    public static void main(String[] args) {

        char[][] board1 = {
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        };


        char[][] board2 = {
                {'.', '2', '.', '.', '5', '.', '.', '1', '.'},
                {'.', '.', '.', '2', '.', '4', '.', '.', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '5', '.', '.', '.', '.', '.', '3', '.'},
                {'4', '.', '.', '6', '.', '8', '.', '.', '7'},
                {'.', '1', '.', '.', '.', '.', '.', '5', '.'},
                {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '.', '3', '.', '6', '.', '.', '.'},
                {'.', '4', '.', '.', '2', '.', '.', '6', '.'}
        };

        char[][] board3 = {
                {'8', '.', '.', '.', '.', '.', '.', '.', '.'},
                {'.', '.', '3', '6', '.', '.', '.', '.', '.'},
                {'.', '7', '.', '.', '9', '.', '2', '.', '.'},
                {'.', '5', '.', '.', '.', '7', '.', '.', '.'},
                {'.', '.', '.', '.', '4', '5', '7', '.', '.'},
                {'.', '.', '.', '1', '.', '.', '.', '3', '.'},
                {'.', '.', '1', '.', '.', '.', '.', '6', '8'},
                {'.', '.', '8', '5', '.', '.', '.', '1', '.'},
                {'.', '9', '.', '.', '.', '.', '4', '.', '.'}
        };


        SudokuSolver sudokuSolverObject = new SudokuSolver();
        sudokuSolverObject.implementation(board1);
    }
}